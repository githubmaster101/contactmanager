{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85584d56.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action ) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'DELETE_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n\t\t\t};\r\n\t\t\tcase 'ADD_CONTACT':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [action.payload, ...state.contacts]\r\n\t\t\t};\r\n\t\t\tcase 'UPDATE_CONTACT':\r\n\t\t\treturn{\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.map(contact => contact.id === action.payload.id\r\n\t\t\t\t\t? (contact = action.payload) : contact)\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\t\r\n\t}\r\n};\r\n\r\nexport class Provider extends Component {\r\n\tstate = {\r\n\t\t\tcontacts: [],\r\n\t\t\tdispatch: action => {\r\n\t\t\t\tthis.setState(state => reducer(state, action))\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tasync\tcomponentDidMount() {\r\n\t\t\tconst res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n\r\n\t\t\tthis.setState({contacts: res.data});\r\n\t\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Context.Provider value={this.state}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</Context.Provider>\r\n\t\t\t)\r\n\t};\r\n};\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import\tReact, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {Consumer} from '../../context';\r\nimport  axios from 'axios';\r\n\r\n\r\nclass Contact extends Component {\r\n\tstate = {\r\n\t\tshowContactInfo: false\r\n\t};\r\n\r\n\tonDeleteClick = async (id, dispatch) => {\r\n\t\tawait\taxios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\t\t\r\n\t\tdispatch({type: 'DELETE_CONTACT', payload: id});\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {id, name, email, phone} = this.props.contact;\r\n\t\tconst { showContactInfo } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"card card-body mb-3\">\r\n\t\t\t\t<h4> {name}\r\n\t\t\t\t\t<i onClick={() => \r\n\t\t\t\t\t\tthis.setState({ showContactInfo: \r\n\t\t\t\t\t\t!this.state.showContactInfo })\r\n\t\t\t\t\t} \r\n\t\t\t\t\tclassName=\"fas fa-sort-down\" style={{ cursor: 'pointer'}}>\r\n\t\t\t\t\t</i> \r\n\t\t\t\t\t\r\n\t\t\t\t\t<i className=\"fas fa-times\"\r\n\t\t\t\t\t\tstyle={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n\t\t\t\t\t\tonClick={this.onDeleteClick.bind(this, id, dispatch)}>\r\n\t\t\t\t\t</i>\r\n\r\n\t\t\t\t\t<Link to={`contact/edit/${id}`}>\r\n\t\t\t\t\t<i className=\"fas fa-pencil-alt\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcursor: 'pointer',\r\n\t\t\t\t\t\t\tfloat: 'right',\r\n\t\t\t\t\t\t\tcolor: 'black',\r\n\t\t\t\t\t\t\tmarginRight: '1rem'\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t</h4>\r\n\r\n\t\t\t{showContactInfo ? (\r\n\t\t\t<ul className=\"list-group\">\r\n\t\t\t\t<li className=\"list-group-item\">Email: {email} </li>\r\n\t\t\t\t<li className=\"list-group-item\">Phone: {phone} </li>\r\n\t\t\t</ul>\r\n\t\t\t\t) : null}\r\n\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nContact.propTypes = {\r\n\tcontact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport {Consumer} from '../../context';\r\n\r\n\r\nclass Contacts extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst {contacts} = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<h1 className=\"display-4 mb-2\">\r\n\t\t\t\t\t\t\t<span className=\"text-danger\">Contact</span> List\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t\t{contacts.map(contact => (\r\n\t\t\t\t\t\t\t<Contact\r\n\t\t\t\t\t\t\t\tkey={contact.id}\r\n\t\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n\tlabel,\r\n\tname,\r\n\tvalue,\r\n\tplaceholder,\r\n\ttype,\r\n\tonChange,\r\n\terror\r\n}) => {\r\n\treturn (\r\n\t\t<div className=\"form-group\">\r\n\t\t\t<label htmlFor={name}>{label}</label>\r\n\t\t\t<input\r\n\t\t\t\ttype={type}\r\n\t\t\t\tname={name}\r\n\t\t\t\tclassName={classnames('form-control form-control-lg', {\r\n\t\t\t\t\t'is-invalid': error\r\n\t\t\t\t})}\r\n\t\t\t\tplaceholder={placeholder}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tonChange={onChange}>\r\n\t\t\t</input>\r\n\t\t\t{error && <div className=\"invalid-feedback\">{error}</div>}\r\n\t\t</div>\r\n\t\t);\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n\tlabel: PropTypes.string.isRequired,\r\n\tname: PropTypes.string.isRequired,\r\n\tplaceholder: PropTypes.string.isRequired,\r\n\tvalue: PropTypes.string.isRequired,\r\n\ttype: PropTypes.string.isRequired,\r\n\tonChange: PropTypes.func.isRequired,\r\n\terror: PropTypes.string \r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n\ttype: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, {Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {}\r\n\t}\r\n\r\n\tonSubmit = async (dispatch, e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst {name, email, phone} = this.state;\r\n\r\n\t\t// Check for errors\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: 'Name is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: 'Email is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: 'Phone is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst newContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t};\r\n\r\n\t\tconst res = await axios.post('https://jsonplaceholder.typicode.com/users', \r\n\t\t\tnewContact);\r\n\r\n\t\tdispatch({type: 'ADD_CONTACT', payload: res.data});\r\n\r\n\t\t// Clear State \r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: {}\r\n\t\t});\r\n\r\n\t\tthis.props.history.push('/'); \r\n\t};\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n\trender() {\r\n\t\tconst {name, email, phone, errors} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">Add Contact</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit={this.onSubmit.bind (this, dispatch)}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Phone\"\r\n\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\tvalue=\"Add Contact\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-block\" >\r\n\t\t\t\t\t\t\t</input>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t);\r\n\t};\r\n};\r\n\r\nexport default AddContact;","import React, {Component} from 'react';\r\nimport {Consumer} from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\tstate = {\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tphone: '',\r\n\t\terrors: {}\r\n\t};\r\n\r\n\tasync componentDidMount () {\r\n\t\tconst {id} = this.props.match.params;\r\n\t\tconst res = await\taxios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n\t\tconst contact = res.data;\r\n\t\tthis.setState({\r\n\t\t\tname: contact.name,\r\n\t\t\temail: contact.email,\r\n\t\t\tphone: contact.phone\r\n\t\t});\r\n\t}\r\n\r\n\tonSubmit = async (dispatch, e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst {name, email, phone} = this.state;\r\n\r\n\t\t// Check for errors\r\n\t\tif(name === '') {\r\n\t\t\tthis.setState({errors: {name: 'Name is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(email === '') {\r\n\t\t\tthis.setState({errors: {email: 'Email is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif(phone === '') {\r\n\t\t\tthis.setState({errors: {phone: 'Phone is required'}});\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst updateContact = {\r\n\t\t\tname,\r\n\t\t\temail,\r\n\t\t\tphone\r\n\t\t}\r\n\r\n\t\tconst {id} = this.props.match.params;\r\n\r\n\t\tconst res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, \r\n\t\t\tupdateContact);\r\n\r\n\t\tdispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n\t\t// Clear State \r\n\t\tthis.setState({\r\n\t\t\tname: '',\r\n\t\t\temail: '',\r\n\t\t\tphone: '',\r\n\t\t\terrors: {}\r\n\t\t});\r\n\r\n\t\tthis.props.history.push('/'); \r\n\t};\r\n\r\n\tonChange = e => this.setState({ [e.target.name]: e.target.value});\r\n\r\n\trender() {\r\n\t\tconst {name, email, phone, errors} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<Consumer>\r\n\t\t\t\t{value => {\r\n\t\t\t\t\tconst { dispatch } = value;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"card mb-3\">\r\n\t\t\t\t<div className=\"card-header\">Edit Contact</div>\r\n\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t<form onSubmit={this.onSubmit.bind (this, dispatch)}>\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Name\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Name\"\r\n\t\t\t\t\t\t\tvalue={name}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.name}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Email\"\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Email\"\r\n\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.email}\r\n\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t<TextInputGroup \r\n\t\t\t\t\t\t\tlabel=\"Phone\"\r\n\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\tplaceholder=\"Enter Phone\"\r\n\t\t\t\t\t\t\tvalue={phone}\r\n\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\terror={errors.phone}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\ttype=\"submit\" \r\n\t\t\t\t\t\t\tvalue=\"Update Contact\"\r\n\t\t\t\t\t\t\tclassName=\"btn btn-block\" >\r\n\t\t\t\t\t\t\t</input>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Consumer>\r\n\t\t\t);\r\n\t};\r\n};\r\n\r\nexport default EditContact;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\tconst {branding} = props;\r\n\treturn (\r\n\t\t<nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-3 py-0\">\r\n\t\t\t<div className=\"container\"> \r\n\t\t\t\t<a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n\t\t\t\t<div>\r\n\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link to=\"/\" className=\"nav-link\">\r\n\t\t\t\t\t<i className=\"fas fa-home\"></i> Home</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link to=\"/contact/add\" className=\"nav-link\">\r\n\t\t\t\t\t<i className=\"fas fa-plus\"></i>Add</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t<Link to=\"/about\" className=\"nav-link\">\r\n\t\t\t\t\t<i className=\"fas fa-question\"></i>About</Link>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t\t);\r\n};\r\n\r\nHeader.defaultProps = {\r\n\tbranding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n\tbranding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport default () => {\r\n\treturn(\r\n\t\t<div> \r\n\t\t<h1 className=\"display-4\">About Contact Manager</h1>\r\n\t\t<p className=\"lead\">Simple app to manage contacts</p>\r\n\t\t<p className=\"text-secondary\">Version 1.0.0</p>\r\n\t\t\r\n\t\t</div>\t);\r\n};","import React from 'react';\r\n\r\nexport default () => {\r\n\treturn(\r\n\t\t<div> \r\n\t\t<h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n\t\t<p className=\"lead\">Sorry, that page does not exist</p>\r\n\t\t</div>);\r\n};","import React, { Component } from 'react';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom'; \nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\n\nimport {Provider} from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n    <Provider> \n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route component={NotFound}/>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n    </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}